package com.formacionbdi.springboot.app.adn.controllers;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.env.Environment;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;
import com.formacionbdi.springboot.app.adn.service.AdnService;
import com.formacionbdi.springboot.app.commons.models.dto.AdnDTO;
import com.formacionbdi.springboot.app.commons.models.dto.StatsDTO;
import com.formacionbdi.springboot.app.commons.models.entity.RegistroAdn;

@RestController
public class AdnController {

	@Autowired
	private Environment env;
	
	@Value("${server.port}")
	private Integer port;
	
	@Autowired
	private AdnService adnService;
	
	@GetMapping("/listar")
	public List<RegistroAdn> listar(){
		return adnService.findAll().stream().map(adnAux -> {
			return adnAux;
		}).collect(Collectors.toList());
	}
	
	@PostMapping("/mutant")
	@ResponseStatus(HttpStatus.FORBIDDEN)
	public ResponseEntity<?> isMutant(@RequestBody AdnDTO adnIn) {
		Map<String, String> json = new HashMap<>();
		String result = adnService.isMutante(adnIn.getDna());
		if(!result.isBlank() && ( result.equalsIgnoreCase("M") || result.equalsIgnoreCase("H"))) {
			json.put("PROCESS",result);
			if(result.equalsIgnoreCase("M"))
			   return new ResponseEntity<Map<String, String>>(json, HttpStatus.OK);
			else
				return new ResponseEntity<Map<String, String>>(json, HttpStatus.FORBIDDEN);	
		}
		else {
			json.put("ERROR",result);
			return new ResponseEntity<Map<String, String>>(json, HttpStatus.FORBIDDEN);
		}
		
	}
	
	@GetMapping("/stats")
	@ResponseStatus(HttpStatus.OK)
	public StatsDTO stats() {
		return adnService.stats();	
	}
	
}	
